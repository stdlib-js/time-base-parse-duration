{"version":3,"file":"mod.js","sources":["../lib/main.js","../node_modules/@stdlib/string-base-lowercase/lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport lowercase from '@stdlib/string-base-lowercase' ;\n\n\n// VARIABLES //\n\nvar RE_TIME_UNIT = /(\\d+)([a-z]+)/gi;\nvar UNITS = {\n\t'd': 'days',\n\t'h': 'hours',\n\t'm': 'minutes',\n\t's': 'seconds',\n\t'ms': 'milliseconds'\n};\n\n\n// MAIN //\n\n/**\n* Parses a duration string into an object.\n*\n* ## Notes\n*\n* -   A duration string is a string containing a sequence of time units. A time unit is a nonnegative integer followed by a unit identifier. The following unit identifiers are supported:\n*\n*     -   `d`: days\n*     -   `h`: hours\n*     -   `m`: minutes\n*     -   `s`: seconds\n*     -   `ms`: milliseconds\n*\n*     For example, the string `1m3s10ms` is a duration string containing three time units: `1m` (1 minute), `3s` (3 seconds), and `10ms` (10 milliseconds). The string `60m` is a duration string containing a single time unit: `60m` (60 minutes).\n*\n* -   Duration strings are case insensitive. For example, the string `1M3S10MS` is equivalent to `1m3s10ms`.\n*\n* -   If a duration string does not contain a time unit, the respective property is set to `0`.\n*\n* -   An empty string is considered a valid duration string and is parsed as `0d0h0m0s0ms`.\n*\n* @param {string} str - duration string\n* @returns {Object} duration object\n*\n* @example\n* var obj = parseDuration( '1m3s10ms' );\n* // returns { 'days': 0, 'hours': 0, 'minutes': 1, 'seconds': 3, 'milliseconds': 10 }\n*\n* @example\n* var obj = parseDuration( '1m3s' );\n* // returns { 'days': 0, 'hours': 0, 'minutes': 1, 'seconds': 3, 'milliseconds': 0 }\n*/\nfunction parseDuration( str ) {\n\tvar parts;\n\tvar out;\n\tvar u;\n\n\tout = {\n\t\t'days': 0,\n\t\t'hours': 0,\n\t\t'minutes': 0,\n\t\t'seconds': 0,\n\t\t'milliseconds': 0\n\t};\n\tif ( str.length === 0 ) {\n\t\treturn out;\n\t}\n\tstr = lowercase( str );\n\tparts = RE_TIME_UNIT.exec( str );\n\twhile ( parts ) {\n\t\tu = UNITS[ parts[ 2 ] ];\n\t\tif ( u ) {\n\t\t\tout[ u ] = parseInt( parts[ 1 ], 10 );\n\t\t}\n\t\tparts = RE_TIME_UNIT.exec( str );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default parseDuration;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Converts a string to lowercase.\n*\n* @param {string} str - string to convert\n* @returns {string} lowercase string\n*\n* @example\n* var str = lowercase( 'bEEp' );\n* // returns 'beep'\n*/\nfunction lowercase( str ) {\n\treturn str.toLowerCase();\n}\n\n\n// EXPORTS //\n\nexport default lowercase;\n"],"names":["RE_TIME_UNIT","UNITS","d","h","m","s","ms","parseDuration","str","parts","out","u","days","hours","minutes","seconds","milliseconds","length","toLowerCase","lowercase","exec","parseInt"],"mappings":";;AA2BA,IAAIA,EAAe,kBACfC,EAAQ,CACXC,EAAK,OACLC,EAAK,QACLC,EAAK,UACLC,EAAK,UACLC,GAAM,gBAsCP,SAASC,EAAeC,GACvB,IAAIC,EACAC,EACAC,EASJ,GAPAD,EAAM,CACLE,KAAQ,EACRC,MAAS,EACTC,QAAW,EACXC,QAAW,EACXC,aAAgB,GAEG,IAAfR,EAAIS,OACR,OAAOP,EAIR,IAFAF,ECtDD,SAAoBA,GACnB,OAAOA,EAAIU,aACZ,CDoDOC,CAAWX,GACjBC,EAAQT,EAAaoB,KAAMZ,GACnBC,IACPE,EAAIV,EAAOQ,EAAO,OAEjBC,EAAKC,GAAMU,SAAUZ,EAAO,GAAK,KAElCA,EAAQT,EAAaoB,KAAMZ,GAE5B,OAAOE,CACR"}